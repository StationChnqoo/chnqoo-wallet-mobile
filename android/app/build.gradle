plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def commandParams = project.property("dart-defines");

logger.info("Console -> Reading build params from command line: ");
logger.info('Console -> dart-defines:' + commandParams);

def params = commandParams.split(",").collectEntries { entry ->
    def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
    logger.info("Console -> decode: " + pair.first() + ':' + pair.last());
    [(pair.first()): pair.last()]
}

logger.info("Console -> Confirmed params.")
logger.info("Console -> Building: " + params.APP_PACKAGE_NAME);
logger.info("Console -> Building: " + params.APP_NAME);

android {
    namespace = "net.cctv3.wallet"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId params.APP_PACKAGE_NAME
        resValue "string", "app_name", params.APP_NAME
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
